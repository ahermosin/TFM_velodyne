// Auto-generated. Do not edit!

// (in-package lcm_to_ros.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class can_coche_freno_abs {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.timestamp_sec = null;
      this.timestamp_nsec = null;
      this.yaw_rate = null;
      this.aceleracion_lateral = null;
      this.presion_freno = null;
      this.flag_yaw = null;
    }
    else {
      if (initObj.hasOwnProperty('timestamp_sec')) {
        this.timestamp_sec = initObj.timestamp_sec
      }
      else {
        this.timestamp_sec = 0;
      }
      if (initObj.hasOwnProperty('timestamp_nsec')) {
        this.timestamp_nsec = initObj.timestamp_nsec
      }
      else {
        this.timestamp_nsec = 0;
      }
      if (initObj.hasOwnProperty('yaw_rate')) {
        this.yaw_rate = initObj.yaw_rate
      }
      else {
        this.yaw_rate = 0.0;
      }
      if (initObj.hasOwnProperty('aceleracion_lateral')) {
        this.aceleracion_lateral = initObj.aceleracion_lateral
      }
      else {
        this.aceleracion_lateral = 0.0;
      }
      if (initObj.hasOwnProperty('presion_freno')) {
        this.presion_freno = initObj.presion_freno
      }
      else {
        this.presion_freno = 0.0;
      }
      if (initObj.hasOwnProperty('flag_yaw')) {
        this.flag_yaw = initObj.flag_yaw
      }
      else {
        this.flag_yaw = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type can_coche_freno_abs
    // Serialize message field [timestamp_sec]
    bufferOffset = _serializer.int32(obj.timestamp_sec, buffer, bufferOffset);
    // Serialize message field [timestamp_nsec]
    bufferOffset = _serializer.int32(obj.timestamp_nsec, buffer, bufferOffset);
    // Serialize message field [yaw_rate]
    bufferOffset = _serializer.float64(obj.yaw_rate, buffer, bufferOffset);
    // Serialize message field [aceleracion_lateral]
    bufferOffset = _serializer.float64(obj.aceleracion_lateral, buffer, bufferOffset);
    // Serialize message field [presion_freno]
    bufferOffset = _serializer.float64(obj.presion_freno, buffer, bufferOffset);
    // Serialize message field [flag_yaw]
    bufferOffset = _serializer.int8(obj.flag_yaw, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type can_coche_freno_abs
    let len;
    let data = new can_coche_freno_abs(null);
    // Deserialize message field [timestamp_sec]
    data.timestamp_sec = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [timestamp_nsec]
    data.timestamp_nsec = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [yaw_rate]
    data.yaw_rate = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [aceleracion_lateral]
    data.aceleracion_lateral = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [presion_freno]
    data.presion_freno = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [flag_yaw]
    data.flag_yaw = _deserializer.int8(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 33;
  }

  static datatype() {
    // Returns string type for a message object
    return 'lcm_to_ros/can_coche_freno_abs';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'b80c855f67d145c3626b8a9967f0f426';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    #######################################################################
    # This message was automatically generated by the lcm_to_ros package
    # https://github.com/nrjl/lcm_to_ros, nicholas.lawrance@oregonstate.edu
    #######################################################################
    #
    # Source message:    .msg
    # Creation:          lun 18 feb 2019 17:14:15 CET
    #
    #######################################################################
    int32               timestamp_sec
    int32               timestamp_nsec
    float64             yaw_rate
    float64             aceleracion_lateral
    float64             presion_freno
    int8                flag_yaw
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new can_coche_freno_abs(null);
    if (msg.timestamp_sec !== undefined) {
      resolved.timestamp_sec = msg.timestamp_sec;
    }
    else {
      resolved.timestamp_sec = 0
    }

    if (msg.timestamp_nsec !== undefined) {
      resolved.timestamp_nsec = msg.timestamp_nsec;
    }
    else {
      resolved.timestamp_nsec = 0
    }

    if (msg.yaw_rate !== undefined) {
      resolved.yaw_rate = msg.yaw_rate;
    }
    else {
      resolved.yaw_rate = 0.0
    }

    if (msg.aceleracion_lateral !== undefined) {
      resolved.aceleracion_lateral = msg.aceleracion_lateral;
    }
    else {
      resolved.aceleracion_lateral = 0.0
    }

    if (msg.presion_freno !== undefined) {
      resolved.presion_freno = msg.presion_freno;
    }
    else {
      resolved.presion_freno = 0.0
    }

    if (msg.flag_yaw !== undefined) {
      resolved.flag_yaw = msg.flag_yaw;
    }
    else {
      resolved.flag_yaw = 0
    }

    return resolved;
    }
};

module.exports = can_coche_freno_abs;
