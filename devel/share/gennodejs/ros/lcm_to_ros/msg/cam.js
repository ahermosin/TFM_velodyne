// Auto-generated. Do not edit!

// (in-package lcm_to_ros.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class cam {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.tiempo = null;
      this.posicion_x = null;
      this.posicion_y = null;
      this.velocidad = null;
      this.orientacion = null;
    }
    else {
      if (initObj.hasOwnProperty('tiempo')) {
        this.tiempo = initObj.tiempo
      }
      else {
        this.tiempo = 0.0;
      }
      if (initObj.hasOwnProperty('posicion_x')) {
        this.posicion_x = initObj.posicion_x
      }
      else {
        this.posicion_x = 0.0;
      }
      if (initObj.hasOwnProperty('posicion_y')) {
        this.posicion_y = initObj.posicion_y
      }
      else {
        this.posicion_y = 0.0;
      }
      if (initObj.hasOwnProperty('velocidad')) {
        this.velocidad = initObj.velocidad
      }
      else {
        this.velocidad = 0.0;
      }
      if (initObj.hasOwnProperty('orientacion')) {
        this.orientacion = initObj.orientacion
      }
      else {
        this.orientacion = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type cam
    // Serialize message field [tiempo]
    bufferOffset = _serializer.float64(obj.tiempo, buffer, bufferOffset);
    // Serialize message field [posicion_x]
    bufferOffset = _serializer.float64(obj.posicion_x, buffer, bufferOffset);
    // Serialize message field [posicion_y]
    bufferOffset = _serializer.float64(obj.posicion_y, buffer, bufferOffset);
    // Serialize message field [velocidad]
    bufferOffset = _serializer.float64(obj.velocidad, buffer, bufferOffset);
    // Serialize message field [orientacion]
    bufferOffset = _serializer.float64(obj.orientacion, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type cam
    let len;
    let data = new cam(null);
    // Deserialize message field [tiempo]
    data.tiempo = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [posicion_x]
    data.posicion_x = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [posicion_y]
    data.posicion_y = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [velocidad]
    data.velocidad = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [orientacion]
    data.orientacion = _deserializer.float64(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 40;
  }

  static datatype() {
    // Returns string type for a message object
    return 'lcm_to_ros/cam';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'ec97bde2f7c4b2bc5a04fa46a294e654';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    #######################################################################
    # This message was automatically generated by the lcm_to_ros package
    # https://github.com/nrjl/lcm_to_ros, nicholas.lawrance@oregonstate.edu
    #######################################################################
    #
    # Source message:    .msg
    # Creation:          lun 18 feb 2019 17:14:15 CET
    #
    #######################################################################
    float64             tiempo
    float64             posicion_x
    float64             posicion_y
    float64             velocidad
    float64             orientacion
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new cam(null);
    if (msg.tiempo !== undefined) {
      resolved.tiempo = msg.tiempo;
    }
    else {
      resolved.tiempo = 0.0
    }

    if (msg.posicion_x !== undefined) {
      resolved.posicion_x = msg.posicion_x;
    }
    else {
      resolved.posicion_x = 0.0
    }

    if (msg.posicion_y !== undefined) {
      resolved.posicion_y = msg.posicion_y;
    }
    else {
      resolved.posicion_y = 0.0
    }

    if (msg.velocidad !== undefined) {
      resolved.velocidad = msg.velocidad;
    }
    else {
      resolved.velocidad = 0.0
    }

    if (msg.orientacion !== undefined) {
      resolved.orientacion = msg.orientacion;
    }
    else {
      resolved.orientacion = 0.0
    }

    return resolved;
    }
};

module.exports = cam;
