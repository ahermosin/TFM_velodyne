// Auto-generated. Do not edit!

// (in-package lcm_to_ros.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class occupancy_grid {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.width = null;
      this.height = null;
      this.d_lat = null;
      this.d_long = null;
      this.n_data = null;
      this.resolution = null;
      this.data = null;
    }
    else {
      if (initObj.hasOwnProperty('width')) {
        this.width = initObj.width
      }
      else {
        this.width = 0;
      }
      if (initObj.hasOwnProperty('height')) {
        this.height = initObj.height
      }
      else {
        this.height = 0;
      }
      if (initObj.hasOwnProperty('d_lat')) {
        this.d_lat = initObj.d_lat
      }
      else {
        this.d_lat = 0.0;
      }
      if (initObj.hasOwnProperty('d_long')) {
        this.d_long = initObj.d_long
      }
      else {
        this.d_long = 0.0;
      }
      if (initObj.hasOwnProperty('n_data')) {
        this.n_data = initObj.n_data
      }
      else {
        this.n_data = 0;
      }
      if (initObj.hasOwnProperty('resolution')) {
        this.resolution = initObj.resolution
      }
      else {
        this.resolution = 0.0;
      }
      if (initObj.hasOwnProperty('data')) {
        this.data = initObj.data
      }
      else {
        this.data = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type occupancy_grid
    // Serialize message field [width]
    bufferOffset = _serializer.int32(obj.width, buffer, bufferOffset);
    // Serialize message field [height]
    bufferOffset = _serializer.int32(obj.height, buffer, bufferOffset);
    // Serialize message field [d_lat]
    bufferOffset = _serializer.float32(obj.d_lat, buffer, bufferOffset);
    // Serialize message field [d_long]
    bufferOffset = _serializer.float32(obj.d_long, buffer, bufferOffset);
    // Serialize message field [n_data]
    bufferOffset = _serializer.int32(obj.n_data, buffer, bufferOffset);
    // Serialize message field [resolution]
    bufferOffset = _serializer.float32(obj.resolution, buffer, bufferOffset);
    // Serialize message field [data]
    bufferOffset = _arraySerializer.int8(obj.data, buffer, bufferOffset, null);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type occupancy_grid
    let len;
    let data = new occupancy_grid(null);
    // Deserialize message field [width]
    data.width = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [height]
    data.height = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [d_lat]
    data.d_lat = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [d_long]
    data.d_long = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [n_data]
    data.n_data = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [resolution]
    data.resolution = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [data]
    data.data = _arrayDeserializer.int8(buffer, bufferOffset, null)
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.data.length;
    return length + 28;
  }

  static datatype() {
    // Returns string type for a message object
    return 'lcm_to_ros/occupancy_grid';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '41f67f04cae87b0293624c6fabb5025f';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    #######################################################################
    # This message was automatically generated by the lcm_to_ros package
    # https://github.com/nrjl/lcm_to_ros, nicholas.lawrance@oregonstate.edu
    #######################################################################
    #
    # Source message:    .msg
    # Creation:          lun 18 feb 2019 17:14:17 CET
    #
    #######################################################################
    int32               width
    int32               height
    float32             d_lat
    float32             d_long
    int32               n_data
    float32             resolution
    int8[]              data
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new occupancy_grid(null);
    if (msg.width !== undefined) {
      resolved.width = msg.width;
    }
    else {
      resolved.width = 0
    }

    if (msg.height !== undefined) {
      resolved.height = msg.height;
    }
    else {
      resolved.height = 0
    }

    if (msg.d_lat !== undefined) {
      resolved.d_lat = msg.d_lat;
    }
    else {
      resolved.d_lat = 0.0
    }

    if (msg.d_long !== undefined) {
      resolved.d_long = msg.d_long;
    }
    else {
      resolved.d_long = 0.0
    }

    if (msg.n_data !== undefined) {
      resolved.n_data = msg.n_data;
    }
    else {
      resolved.n_data = 0
    }

    if (msg.resolution !== undefined) {
      resolved.resolution = msg.resolution;
    }
    else {
      resolved.resolution = 0.0
    }

    if (msg.data !== undefined) {
      resolved.data = msg.data;
    }
    else {
      resolved.data = []
    }

    return resolved;
    }
};

module.exports = occupancy_grid;
