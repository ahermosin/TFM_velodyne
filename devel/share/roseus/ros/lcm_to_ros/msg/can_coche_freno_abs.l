;; Auto-generated. Do not edit!


(when (boundp 'lcm_to_ros::can_coche_freno_abs)
  (if (not (find-package "LCM_TO_ROS"))
    (make-package "LCM_TO_ROS"))
  (shadow 'can_coche_freno_abs (find-package "LCM_TO_ROS")))
(unless (find-package "LCM_TO_ROS::CAN_COCHE_FRENO_ABS")
  (make-package "LCM_TO_ROS::CAN_COCHE_FRENO_ABS"))

(in-package "ROS")
;;//! \htmlinclude can_coche_freno_abs.msg.html


(defclass lcm_to_ros::can_coche_freno_abs
  :super ros::object
  :slots (_timestamp_sec _timestamp_nsec _yaw_rate _aceleracion_lateral _presion_freno _flag_yaw ))

(defmethod lcm_to_ros::can_coche_freno_abs
  (:init
   (&key
    ((:timestamp_sec __timestamp_sec) 0)
    ((:timestamp_nsec __timestamp_nsec) 0)
    ((:yaw_rate __yaw_rate) 0.0)
    ((:aceleracion_lateral __aceleracion_lateral) 0.0)
    ((:presion_freno __presion_freno) 0.0)
    ((:flag_yaw __flag_yaw) 0)
    )
   (send-super :init)
   (setq _timestamp_sec (round __timestamp_sec))
   (setq _timestamp_nsec (round __timestamp_nsec))
   (setq _yaw_rate (float __yaw_rate))
   (setq _aceleracion_lateral (float __aceleracion_lateral))
   (setq _presion_freno (float __presion_freno))
   (setq _flag_yaw (round __flag_yaw))
   self)
  (:timestamp_sec
   (&optional __timestamp_sec)
   (if __timestamp_sec (setq _timestamp_sec __timestamp_sec)) _timestamp_sec)
  (:timestamp_nsec
   (&optional __timestamp_nsec)
   (if __timestamp_nsec (setq _timestamp_nsec __timestamp_nsec)) _timestamp_nsec)
  (:yaw_rate
   (&optional __yaw_rate)
   (if __yaw_rate (setq _yaw_rate __yaw_rate)) _yaw_rate)
  (:aceleracion_lateral
   (&optional __aceleracion_lateral)
   (if __aceleracion_lateral (setq _aceleracion_lateral __aceleracion_lateral)) _aceleracion_lateral)
  (:presion_freno
   (&optional __presion_freno)
   (if __presion_freno (setq _presion_freno __presion_freno)) _presion_freno)
  (:flag_yaw
   (&optional __flag_yaw)
   (if __flag_yaw (setq _flag_yaw __flag_yaw)) _flag_yaw)
  (:serialization-length
   ()
   (+
    ;; int32 _timestamp_sec
    4
    ;; int32 _timestamp_nsec
    4
    ;; float64 _yaw_rate
    8
    ;; float64 _aceleracion_lateral
    8
    ;; float64 _presion_freno
    8
    ;; int8 _flag_yaw
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _timestamp_sec
       (write-long _timestamp_sec s)
     ;; int32 _timestamp_nsec
       (write-long _timestamp_nsec s)
     ;; float64 _yaw_rate
       (sys::poke _yaw_rate (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _aceleracion_lateral
       (sys::poke _aceleracion_lateral (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _presion_freno
       (sys::poke _presion_freno (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; int8 _flag_yaw
       (write-byte _flag_yaw s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _timestamp_sec
     (setq _timestamp_sec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _timestamp_nsec
     (setq _timestamp_nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; float64 _yaw_rate
     (setq _yaw_rate (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _aceleracion_lateral
     (setq _aceleracion_lateral (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _presion_freno
     (setq _presion_freno (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; int8 _flag_yaw
     (setq _flag_yaw (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _flag_yaw 127) (setq _flag_yaw (- _flag_yaw 256)))
   ;;
   self)
  )

(setf (get lcm_to_ros::can_coche_freno_abs :md5sum-) "b80c855f67d145c3626b8a9967f0f426")
(setf (get lcm_to_ros::can_coche_freno_abs :datatype-) "lcm_to_ros/can_coche_freno_abs")
(setf (get lcm_to_ros::can_coche_freno_abs :definition-)
      "#######################################################################
# This message was automatically generated by the lcm_to_ros package
# https://github.com/nrjl/lcm_to_ros, nicholas.lawrance@oregonstate.edu
#######################################################################
#
# Source message:    .msg
# Creation:          lun 18 feb 2019 17:14:15 CET
#
#######################################################################
int32               timestamp_sec
int32               timestamp_nsec
float64             yaw_rate
float64             aceleracion_lateral
float64             presion_freno
int8                flag_yaw

")



(provide :lcm_to_ros/can_coche_freno_abs "b80c855f67d145c3626b8a9967f0f426")


