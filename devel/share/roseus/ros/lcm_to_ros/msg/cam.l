;; Auto-generated. Do not edit!


(when (boundp 'lcm_to_ros::cam)
  (if (not (find-package "LCM_TO_ROS"))
    (make-package "LCM_TO_ROS"))
  (shadow 'cam (find-package "LCM_TO_ROS")))
(unless (find-package "LCM_TO_ROS::CAM")
  (make-package "LCM_TO_ROS::CAM"))

(in-package "ROS")
;;//! \htmlinclude cam.msg.html


(defclass lcm_to_ros::cam
  :super ros::object
  :slots (_tiempo _posicion_x _posicion_y _velocidad _orientacion ))

(defmethod lcm_to_ros::cam
  (:init
   (&key
    ((:tiempo __tiempo) 0.0)
    ((:posicion_x __posicion_x) 0.0)
    ((:posicion_y __posicion_y) 0.0)
    ((:velocidad __velocidad) 0.0)
    ((:orientacion __orientacion) 0.0)
    )
   (send-super :init)
   (setq _tiempo (float __tiempo))
   (setq _posicion_x (float __posicion_x))
   (setq _posicion_y (float __posicion_y))
   (setq _velocidad (float __velocidad))
   (setq _orientacion (float __orientacion))
   self)
  (:tiempo
   (&optional __tiempo)
   (if __tiempo (setq _tiempo __tiempo)) _tiempo)
  (:posicion_x
   (&optional __posicion_x)
   (if __posicion_x (setq _posicion_x __posicion_x)) _posicion_x)
  (:posicion_y
   (&optional __posicion_y)
   (if __posicion_y (setq _posicion_y __posicion_y)) _posicion_y)
  (:velocidad
   (&optional __velocidad)
   (if __velocidad (setq _velocidad __velocidad)) _velocidad)
  (:orientacion
   (&optional __orientacion)
   (if __orientacion (setq _orientacion __orientacion)) _orientacion)
  (:serialization-length
   ()
   (+
    ;; float64 _tiempo
    8
    ;; float64 _posicion_x
    8
    ;; float64 _posicion_y
    8
    ;; float64 _velocidad
    8
    ;; float64 _orientacion
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _tiempo
       (sys::poke _tiempo (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _posicion_x
       (sys::poke _posicion_x (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _posicion_y
       (sys::poke _posicion_y (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _velocidad
       (sys::poke _velocidad (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _orientacion
       (sys::poke _orientacion (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _tiempo
     (setq _tiempo (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _posicion_x
     (setq _posicion_x (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _posicion_y
     (setq _posicion_y (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _velocidad
     (setq _velocidad (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _orientacion
     (setq _orientacion (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get lcm_to_ros::cam :md5sum-) "ec97bde2f7c4b2bc5a04fa46a294e654")
(setf (get lcm_to_ros::cam :datatype-) "lcm_to_ros/cam")
(setf (get lcm_to_ros::cam :definition-)
      "#######################################################################
# This message was automatically generated by the lcm_to_ros package
# https://github.com/nrjl/lcm_to_ros, nicholas.lawrance@oregonstate.edu
#######################################################################
#
# Source message:    .msg
# Creation:          lun 18 feb 2019 17:14:15 CET
#
#######################################################################
float64             tiempo
float64             posicion_x
float64             posicion_y
float64             velocidad
float64             orientacion

")



(provide :lcm_to_ros/cam "ec97bde2f7c4b2bc5a04fa46a294e654")


